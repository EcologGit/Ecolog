# Generated by Django 4.1.5 on 2023-01-20 05:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admarea',
            fields=[
                ('admareaid', models.AutoField(db_column='admareaID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'admarea',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Difictulites',
            fields=[
                ('diffictulityid', models.AutoField(db_column='diffictulityID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'difictulites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('eventid', models.AutoField(db_column='EventID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=100)),
                ('statusid', models.IntegerField(db_column='StatusID')),
                ('adress', models.CharField(max_length=256)),
                ('latitude_n', models.DecimalField(db_column='latitude_N', decimal_places=6, max_digits=8)),
                ('longitude_e', models.DecimalField(db_column='longitude_E', decimal_places=6, max_digits=8)),
                ('photo', models.TextField(blank=True, null=True)),
                ('time', models.DateTimeField()),
                ('time_of_close', models.DateTimeField()),
            ],
            options={
                'db_table': 'Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventsOnObjects',
            fields=[
                ('eventid', models.IntegerField(db_column='EventID')),
                ('objectid', models.IntegerField(db_column='ObjectID')),
                ('eo_id', models.IntegerField(db_column='EO_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'events_on_objects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventsOnRoutes',
            fields=[
                ('eventid', models.IntegerField(db_column='EventID', primary_key=True, serialize=False)),
                ('routeid', models.IntegerField(db_column='RouteID')),
            ],
            options={
                'db_table': 'events_on_routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('favid', models.AutoField(db_column='FavID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserID')),
                ('eventid', models.IntegerField(blank=True, db_column='EventID', null=True)),
                ('objectid', models.IntegerField(blank=True, db_column='ObjectID', null=True)),
                ('routeid', models.IntegerField(blank=True, db_column='RouteID', null=True)),
                ('pointid', models.IntegerField(blank=True, db_column='PointID', null=True)),
            ],
            options={
                'db_table': 'Favourites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GarbagePoints',
            fields=[
                ('pointid', models.AutoField(db_column='PointID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('admareaid', models.IntegerField(blank=True, db_column='admareaID', null=True)),
                ('districtid', models.IntegerField(blank=True, db_column='districtID', null=True)),
                ('transport', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=256)),
                ('locality', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=100)),
                ('latitude_n', models.DecimalField(db_column='latitude_N', decimal_places=6, max_digits=8)),
                ('longitude_e', models.DecimalField(db_column='longitude_E', decimal_places=5, max_digits=7)),
                ('working_hoursid', models.IntegerField(db_column='working_hoursID')),
                ('organization_inn', models.DecimalField(decimal_places=0, max_digits=12, unique=True)),
            ],
            options={
                'db_table': 'Garbage_points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Objects',
            fields=[
                ('objectid', models.AutoField(db_column='ObjectID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=100)),
                ('category_obj_id', models.IntegerField(db_column='category_obj_ID')),
                ('latitude_n', models.DecimalField(db_column='latitude_N', decimal_places=6, max_digits=8)),
                ('longitude_e', models.DecimalField(db_column='longitude_E', decimal_places=5, max_digits=7)),
                ('locality', models.CharField(max_length=256)),
                ('transport', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=256)),
                ('organization_inn', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True)),
                ('working_hoursid', models.IntegerField(blank=True, db_column='working_hoursID', null=True)),
                ('has_parking', models.BooleanField(blank=True, null=True)),
                ('photo', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Objects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('organization_inn', models.DecimalField(decimal_places=0, max_digits=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('e_mail', models.CharField(db_column='e-mail', max_length=64)),
                ('phone', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'Organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permission_id', models.IntegerField(db_column='Permission_ID', primary_key=True, serialize=False)),
                ('name_of_premission', models.TextField(db_collation='C', db_column='name_of premission')),
                ('valid', models.BooleanField()),
            ],
            options={
                'db_table': 'permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PointTypes',
            fields=[
                ('wasteid', models.IntegerField(db_column='WasteID', primary_key=True, serialize=False)),
                ('pointid', models.IntegerField(db_column='PointID')),
            ],
            options={
                'db_table': 'point_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rates',
            fields=[
                ('rateid', models.AutoField(db_column='RateID', primary_key=True, serialize=False)),
                ('rate1', models.IntegerField(db_column='Rate1')),
                ('rate2', models.IntegerField(db_column='Rate2')),
                ('rate3', models.IntegerField(db_column='Rate3')),
            ],
            options={
                'db_table': 'Rates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('reportid', models.AutoField(db_column='ReportID', primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('photo', models.TextField(blank=True, null=True)),
                ('time', models.DateTimeField()),
                ('rateid', models.IntegerField(blank=True, db_column='RateID', null=True)),
            ],
            options={
                'db_table': 'Reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportsEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reports_reportid', models.IntegerField(db_column='Reports_ReportID')),
                ('events_reportid', models.IntegerField(blank=True, db_column='Events_ReportID', null=True)),
            ],
            options={
                'db_table': 'Reports_Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('resultid', models.AutoField(db_column='ResultID', primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('wasteid', models.IntegerField(db_column='WasteID')),
                ('aproved', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleOnPermission',
            fields=[
                ('roleid', models.IntegerField(db_column='RoleID', primary_key=True, serialize=False)),
                ('permissionid', models.IntegerField(db_column='PermissionID')),
            ],
            options={
                'db_table': 'role_on_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleid', models.AutoField(db_column='RoleID', primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('r', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=100)),
                ('start_n', models.DecimalField(db_column='start_N', decimal_places=6, max_digits=8)),
                ('start_e', models.DecimalField(db_column='start_E', decimal_places=5, max_digits=7)),
                ('end_n', models.DecimalField(db_column='end_N', decimal_places=6, max_digits=8)),
                ('end_e', models.DecimalField(db_column='end_E', decimal_places=5, max_digits=7)),
                ('diffictulityid', models.IntegerField(db_column='diffictulityID')),
                ('lenght', models.FloatField()),
                ('duration', models.TextField()),
                ('transport', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=256)),
                ('price', models.IntegerField()),
                ('photo', models.TextField()),
            ],
            options={
                'db_table': 'routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SexDic',
            fields=[
                ('sexid', models.AutoField(db_column='SexID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'Sex_dic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('statusid', models.IntegerField(db_column='statusID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusesR',
            fields=[
                ('statusid_r', models.IntegerField(db_column='StatusID_R', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'statuses_r',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserHasRole',
            fields=[
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('roleid', models.IntegerField(db_column='RoleID')),
            ],
            options={
                'db_table': 'user_has_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('publicname', models.CharField(max_length=32)),
                ('surname', models.CharField(max_length=32)),
                ('birth_date', models.DateTimeField()),
                ('locality', models.CharField(max_length=256)),
                ('photo', models.TextField(blank=True, null=True)),
                ('sexid', models.IntegerField(db_column='SexID')),
                ('login', models.CharField(max_length=32)),
                ('password', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField()),
                ('active', models.BooleanField()),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WasteTypes',
            fields=[
                ('wasteid', models.AutoField(db_column='WasteID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'Waste_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkingHours',
            fields=[
                ('workin_hoursid', models.IntegerField(db_column='workin_hoursID', primary_key=True, serialize=False)),
                ('day_of_week', models.CharField(max_length=32)),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('each', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'working_hours',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('districtid', models.OneToOneField(db_column='districtID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='eco.admarea')),
                ('admareaid', models.IntegerField(db_column='admareaID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'Districts',
                'managed': False,
            },
        ),
    ]
