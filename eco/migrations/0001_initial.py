# Generated by Django 4.1.5 on 2023-04-02 14:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('public_name', models.CharField(max_length=100)),
                ('sex', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1)),
                ('birth_date', models.DateField(null=True)),
                ('locality', models.CharField(max_length=100, null=True)),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admarea',
            fields=[
                ('admarea_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryObjDict',
            fields=[
                ('category_obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('district_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('admarea_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='districts', to='eco.admarea')),
            ],
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('inn', models.DecimalField(decimal_places=0, max_digits=12, max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=64)),
                ('phone_number', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=100)),
                ('start_n', models.DecimalField(decimal_places=6, max_digits=8)),
                ('start_e', models.DecimalField(decimal_places=5, max_digits=7)),
                ('end_n', models.DecimalField(decimal_places=6, max_digits=8)),
                ('end_e', models.DecimalField(decimal_places=5, max_digits=7)),
                ('diffictulity_level', models.CharField(choices=[('A', 'Очень легко'), ('B', 'Легко'), ('C', 'Средне'), ('D', 'Сложно')], default='A', max_length=1)),
                ('length', models.FloatField()),
                ('duration', models.TextField()),
                ('transport_description', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=256)),
                ('price', models.IntegerField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='StatusesDict',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='StatusesRDict',
            fields=[
                ('status_id_r', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='WasteTypes',
            fields=[
                ('waste_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('unit_of_waste', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='SortPoints',
            fields=[
                ('point_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('transport_description', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=256)),
                ('locality', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=100)),
                ('latitude_n', models.DecimalField(decimal_places=6, max_digits=8, max_length=9)),
                ('longitude_e', models.DecimalField(decimal_places=5, max_digits=8, max_length=9)),
                ('schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('admarea_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sort_points', to='eco.admarea')),
                ('district_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='eco.districts')),
                ('organization_inn', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='eco.organizations')),
                ('wast_types', models.ManyToManyField(to='eco.wastetypes')),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('result_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('aproved', models.BooleanField(blank=True, null=True)),
                ('report_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='eco.reports')),
                ('waste_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='eco.wastetypes')),
            ],
        ),
        migrations.AddField(
            model_name='reports',
            name='status_id_r',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reports', to='eco.statusesrdict'),
        ),
        migrations.AddField(
            model_name='reports',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Rates',
            fields=[
                ('rate_id', models.AutoField(primary_key=True, serialize=False)),
                ('availability', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('beauty', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('purity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('report_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='eco.reports')),
            ],
        ),
        migrations.CreateModel(
            name='NatureObjects',
            fields=[
                ('object_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=100)),
                ('latitude_n', models.DecimalField(decimal_places=6, max_digits=8, max_length=9)),
                ('longitude_e', models.DecimalField(decimal_places=6, max_digits=8, max_length=9)),
                ('locality', models.CharField(max_length=256)),
                ('transport_description', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=256)),
                ('has_parking', models.BooleanField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('admarea_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nature_objects', to='eco.admarea')),
                ('category_obj_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nature_objects', to='eco.categoryobjdict')),
                ('district_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='eco.districts')),
                ('organization_inn', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='eco.organizations')),
            ],
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('fav_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=256)),
                ('latitude_n', models.DecimalField(decimal_places=6, max_digits=8, max_length=9)),
                ('longitude_e', models.DecimalField(decimal_places=6, max_digits=8, max_length=9)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('time_start', models.DateTimeField()),
                ('time_of_close', models.DateTimeField()),
                ('nature_objects', models.ManyToManyField(blank=True, to='eco.natureobjects')),
                ('routes', models.ManyToManyField(blank=True, to='eco.routes')),
                ('status_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='eco.statusesdict')),
            ],
        ),
        migrations.AddIndex(
            model_name='reports',
            index=models.Index(fields=['content_type', 'object_id'], name='eco_reports_content_a61c4c_idx'),
        ),
        migrations.AddIndex(
            model_name='favourites',
            index=models.Index(fields=['content_type', 'object_id'], name='eco_favouri_content_a7618a_idx'),
        ),
    ]
